import{_ as a,a as n,o as e,a2 as p}from"./chunks/framework.Dy7Nxh_Q.js";const u=JSON.parse('{"title":"JavaScript API","description":"","frontmatter":{},"headers":[],"relativePath":"competition/lanqiaoWeb/JavaScript-API.md","filePath":"competition/lanqiaoWeb/JavaScript-API.md","lastUpdated":1742018603000}'),l={name:"competition/lanqiaoWeb/JavaScript-API.md"};function i(r,s,t,c,o,d){return e(),n("div",null,s[0]||(s[0]=[p(`<h1 id="javascript-api" tabindex="-1">JavaScript API <a class="header-anchor" href="#javascript-api" aria-label="Permalink to &quot;JavaScript API&quot;">​</a></h1><p>蓝桥杯Web组 省赛备赛</p><hr><h2 id="javascript-学习资源" tabindex="-1">JavaScript 学习资源 <a class="header-anchor" href="#javascript-学习资源" aria-label="Permalink to &quot;JavaScript 学习资源&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noreferrer">MDN</a></p><p><a href="https://github.com/apachecn/JavaScript-The-Definitive-Guide-7th-zh" target="_blank" rel="noreferrer">JavaScript 权威指南</a></p><hr><h2 id="javascript速览" tabindex="-1">JavaScript速览 <a class="header-anchor" href="#javascript速览" aria-label="Permalink to &quot;JavaScript速览&quot;">​</a></h2><ol><li><p>JavaScript是一门<strong>动态、解释性</strong>编程语言，非常适合<strong>面向对象和函数式编程</strong>风格。</p></li><li><p>核心JavaScript定义了最小限度的API，用于操作数值、文本、数组、Map、Set等。</p></li><li><p><strong>浏览器</strong>是JavaScript最早的运行环境；<strong>Node.js</strong>是JavaScript的另一个运行环境，给予了JavaScript访问整个操作系统的权限。</p></li><li><p>JavaScript类型可以分为<strong>原始类型（Number、String、Boolean、null、undefined、Symbol）和对象类型（Array、Set、Map、RegExp、Date等）</strong>。</p></li><li><p>JavaScript有一个灵活而被诟病的<strong>自动转换规则</strong>。</p></li></ol><hr><h2 id="number" tabindex="-1"><code>Number</code> <a class="header-anchor" href="#number" aria-label="Permalink to &quot;\`Number\`&quot;">​</a></h2><h3 id="数学计算" tabindex="-1">数学计算 <a class="header-anchor" href="#数学计算" aria-label="Permalink to &quot;数学计算&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Math.round(1.5) // 2</span></span>
<span class="line"><span>Math.fround(1.5) // 1.5，舍入到最接近的32位浮点数</span></span>
<span class="line"><span>Math.ceil(1.1) // 2</span></span>
<span class="line"><span>Math.floor(1.9) // 1</span></span>
<span class="line"><span>Math.sqrt(4) // 2</span></span>
<span class="line"><span>Math.pow(2, 10) // 1024</span></span>
<span class="line"><span>Math.random() // 0.0 ~ 1.0</span></span>
<span class="line"><span>Math.max(1, 2, 3) // 3</span></span>
<span class="line"><span>Math.min(1, 2, 3) // 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="上溢出-下溢出-被零除" tabindex="-1">上溢出？下溢出？被零除？ <a class="header-anchor" href="#上溢出-下溢出-被零除" aria-label="Permalink to &quot;上溢出？下溢出？被零除？&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Number.MAX_VALUE // 1.7976931348623157e+308</span></span>
<span class="line"><span>Number.MIN_VALUE // 5e-324</span></span>
<span class="line"><span>Number.isNaN(x)</span></span>
<span class="line"><span>Number.isFinite(x)</span></span>
<span class="line"><span>Number.isInteger(x)</span></span>
<span class="line"><span>Number.isSafeInteger(x)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h2 id="string" tabindex="-1"><code>String</code> <a class="header-anchor" href="#string" aria-label="Permalink to &quot;\`String\`&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let str = &#39;hello world&#39;;</span></span>
<span class="line"><span>str.length // 11</span></span>
<span class="line"><span>str[0] // &#39;h&#39;</span></span>
<span class="line"><span>str[str.length - 1] // &#39;d&#39;</span></span>
<span class="line"><span>str.substring(0, 5) // &#39;hello&#39;，</span></span>
<span class="line"><span>str.slice(0, 5) // &#39;hello&#39;</span></span>
<span class="line"><span>str.slice(6) // &#39;world&#39;，默认截取到结尾</span></span>
<span class="line"><span>str.slice(-1)  // &#39;d&#39;，支持负数</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let str = &#39;hello world&#39;;</span></span>
<span class="line"><span>str.indexOf(&#39;world&#39;) // 6</span></span>
<span class="line"><span>str.lastIndexOf(&#39;o&#39;) // 7</span></span>
<span class="line"><span>str.includes(&#39;hello&#39;) // true</span></span>
<span class="line"><span>str.startsWith(&#39;hello&#39;) // true</span></span>
<span class="line"><span>str.endsWith(&#39;world&#39;) // true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let str = &#39;hello world&#39;;</span></span>
<span class="line"><span>str.toUpperCase() // &#39;HELLO WORLD&#39;</span></span>
<span class="line"><span>str.toLowerCase() // &#39;hello world&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h2 id="string-1" tabindex="-1"><code>String</code> <a class="header-anchor" href="#string-1" aria-label="Permalink to &quot;\`String\`&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let str = &#39;hello world&#39;;</span></span>
<span class="line"><span>str.split(&#39; &#39;) // [&#39;hello&#39;, &#39;world&#39;]</span></span>
<span class="line"><span>str.replace(&#39;world&#39;, &#39;javascript&#39;) // &#39;hello javascript&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let str = &#39; hello world &#39;;</span></span>
<span class="line"><span>str.trim() // &#39;hello world&#39;</span></span>
<span class="line"><span>str.trimStart() // &#39;hello world &#39;</span></span>
<span class="line"><span>str.trimEnd() // &#39; hello world&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;x&quot;.padStart(3, &quot;*&quot;)</span><span> // &#39;**x&#39;</span></span>
<span class="line"><span>&quot;x&quot;.padEnd(3, &quot;*&quot;)</span><span> // &#39;x**</span></span>
<span class="line"><span>&quot;x&quot;.padStart(3)</span><span> // &#39;  x&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;&lt;&gt;&quot;.repeat(3)</span><span> // &#39;&lt;&gt;&lt;&gt;&lt;&gt;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h2 id="boolean" tabindex="-1"><code>Boolean</code> <a class="header-anchor" href="#boolean" aria-label="Permalink to &quot;\`Boolean\`&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Boolean(0) // false</span></span>
<span class="line"><span>Boolean(NaN) // false</span></span>
<span class="line"><span>Boolean(&#39;&#39;) // false</span></span>
<span class="line"><span>Boolean(null) // false</span></span>
<span class="line"><span>Boolean(undefined) // false</span></span>
<span class="line"><span>Boolean([]) // true!!!</span></span>
<span class="line"><span>Boolean({}) // true!!!</span></span>
<span class="line"><span>Boolean(&#39; &#39;) // true</span></span>
<span class="line"><span>Boolean(&#39;false&#39;) // true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><h2 id="原始值类型转换" tabindex="-1">原始值类型转换 <a class="header-anchor" href="#原始值类型转换" aria-label="Permalink to &quot;原始值类型转换&quot;">​</a></h2><p>隐式的类型转换：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>x + &quot;&quot;   // String(x)</span></span>
<span class="line"><span>\`\${x}\`   // String(x), recommended</span></span>
<span class="line"><span>+x         // Number(x)</span></span>
<span class="line"><span>!!x        // Boolean(x)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>显式的类型转换：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>String(x)</span></span>
<span class="line"><span>Number(x)</span></span>
<span class="line"><span>Boolean(x)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在每次进行类型转换时，都需要<strong>想一下<code>undefined</code>和<code>null</code></strong>！</p><p>控制数字转字符串的格式：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let num = 123456.789;</span></span>
<span class="line"><span>num.toFixed(2) // &quot;123456.79&quot;</span></span>
<span class="line"><span>num.toPrecision(5) // &quot;1.2346e+5&quot;</span></span>
<span class="line"><span>num.toExponential(2) // &quot;1.23e+5&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><h2 id="object" tabindex="-1"><code>Object</code> <a class="header-anchor" href="#object" aria-label="Permalink to &quot;\`Object\`&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let obj = {</span></span>
<span class="line"><span>  name: &#39;Alice&#39;,</span></span>
<span class="line"><span>  age: 18,</span></span>
<span class="line"><span>  sayHello: function() {</span></span>
<span class="line"><span>    console.log(&#39;Hello, my name is &#39; + this.name);</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  sayHello2() {  // 简写语法</span></span>
<span class="line"><span>    console.log(&#39;Hello, my name is &#39; + this.name);</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  [&#39;key&#39; + &#39;1&#39;]: &#39;value1&#39;,  // 方括号里支持 JavaScript 表达式</span></span>
<span class="line"><span>  get info() {</span></span>
<span class="line"><span>    return this.name + &#39; &#39; + this.age;</span></span>
<span class="line"><span>  },   // getter, 计算属性</span></span>
<span class="line"><span>  set setName(name) {</span></span>
<span class="line"><span>    this.name = name;</span></span>
<span class="line"><span>  }    // setter</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>obj.name // &#39;Alice&#39;</span></span>
<span class="line"><span>obj.age.length  // undefined</span></span>
<span class="line"><span>&quot;xxx&quot; in obj</span><span>  // false</span></span>
<span class="line"><span>obj.xxx.length  // Error</span></span>
<span class="line"><span>obj?.xxx?.length  // 可空属性访问，undefined</span></span>
<span class="line"><span>obj?.xxx?.length ?? 0  // 默认值</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><hr><h2 id="array" tabindex="-1"><code>Array</code> <a class="header-anchor" href="#array" aria-label="Permalink to &quot;\`Array\`&quot;">​</a></h2><p>⚠ <strong>数组是一种对象</strong>，其下标是一种特殊的<strong>对象属性</strong>，这可以解释很多JavaScript数组与其他语言不同的语法特性。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let arr = [1, , , 2]</span></span>
<span class="line"><span>arr.length // 4</span></span>
<span class="line"><span></span></span>
<span class="line"><span>arr[0]  // 1</span></span>
<span class="line"><span>arr[-1]  // undefined</span></span>
<span class="line"><span>arr[10]  // undefined</span></span>
<span class="line"><span></span></span>
<span class="line"><span>arr = new Array(10)</span></span>
<span class="line"><span>arr.length // 10</span></span>
<span class="line"><span>arr[0]  // undefined</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Array.of(1, 2, 3) // [1, 2, 3]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Array.from(&#39;hello&#39;) // [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;]</span></span>
<span class="line"><span>[...&#39;hello&#39;] // the same</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><hr><h2 id="array的就地操作" tabindex="-1"><code>Array</code>的就地操作 <a class="header-anchor" href="#array的就地操作" aria-label="Permalink to &quot;\`Array\`的就地操作&quot;">​</a></h2><ul><li><code>push(item)</code>: 末尾添加元素。</li><li><code>pop()</code>: 删除并返回末尾元素。</li></ul><p>使用<code>push</code>和<code>pop</code>可以模拟栈。</p><ul><li><code>unshift(item)</code>: 开头添加元素。</li><li><code>shift()</code>: 删除并返回开头元素。</li></ul><p>使用<code>push</code>和<code>shift</code>可以模拟队列。</p><ul><li><code>splice(loc)</code>：删除从索引<code>loc</code>开始的所有元素，返回被删除的元素数组。</li><li><code>splice(loc, count)</code>：切出从索引<code>loc</code>开始的<code>count</code>个元素，返回被删除的元素数组。</li><li><code>splice(loc, count, ...items)</code>: 在切出元素的基础上，在<code>loc</code>位置插入元素。</li></ul><p>⚠ 这几个方法都是对数组的<strong>就地操作</strong>，会改变原数组但不会返回原数组。</p><hr><h2 id="array的其他操作" tabindex="-1"><code>Array</code>的其他操作 <a class="header-anchor" href="#array的其他操作" aria-label="Permalink to &quot;\`Array\`的其他操作&quot;">​</a></h2><ul><li><p><code>slice(start, end)</code>: 返回从<code>start</code>到<code>end</code>（不包括<code>end</code>）的片段。</p></li><li><p><code>fill(item, start, end)</code>: 用<code>item</code>填充从<code>start</code>到<code>end</code>（不包括<code>end</code>）的片段。</p></li><li><p><code>sort(func)</code>：按照指定规则排序。默认按照字符串字典序排序。</p></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[1, 2, 3].sort((a, b) =&gt; a - b) // [1, 2, 3]</span></span>
<span class="line"><span>[1, 2, 3].sort((a, b) =&gt; b - a) // [3, 2, 1]</span></span>
<span class="line"><span>[</span></span>
<span class="line"><span>  {name: &quot;Alice&quot;, grade: 1}, </span></span>
<span class="line"><span>  {name: &quot;Bob&quot;, grade: 2}</span></span>
<span class="line"><span>].sort((a, b) =&gt; a.grade - b.grade) </span></span>
<span class="line"><span>        // [{name: &quot;Alice&quot;, grade: 1}, {name: &quot;Bob&quot;, grade: 2}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><p><code>reverse()</code>：反转数组。</p></li><li><p><code>concat(...items)</code>: 返回新数组，新数组是原数组的副本，并在末尾添加<code>items</code>。</p></li><li><p><code>join(sep)</code>: 返回字符串，字符串由原数组的元素组成，元素之间用<code>sep</code>分隔。</p></li></ul><hr><h2 id="array的迭代-🗡" tabindex="-1"><code>Array</code>的迭代 🗡 <a class="header-anchor" href="#array的迭代-🗡" aria-label="Permalink to &quot;\`Array\`的迭代 🗡&quot;">​</a></h2><ul><li><p><code>forEach(func)</code>: 对每个元素调用<code>func</code>。</p></li><li><p><code>map(func)</code>: 对每个元素调用<code>func</code>，返回新数组。</p></li><li><p><code>filter(func)</code>: 对每个元素调用<code>func</code>，返回新数组，其中只包含<code>func</code>返回<code>true</code>的元素。</p></li><li><p><code>reduce(func, init)</code>: 对每个元素调用<code>func</code>，<code>func</code>的返回值作为下一次调用<code>func</code>时的第一个参数，<code>init</code>是第一次调用<code>func</code>时的第一个参数。</p></li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>new Array(20)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>new Array(20).fill(0)</span></span>
<span class="line"><span>    .map((_, idx) =&gt; idx + 1)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>new Array(20).fill(0)</span></span>
<span class="line"><span>    .map((_, idx) =&gt; idx + 1)</span></span>
<span class="line"><span>    .filter(x =&gt; x % 2 != 0)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>new Array(20).fill(0)</span></span>
<span class="line"><span>    .map((_, idx) =&gt; idx + 1)</span></span>
<span class="line"><span>    .filter(x =&gt; x % 2 != 0)</span></span>
<span class="line"><span>    .reduce((a, b) =&gt; a + b, 0)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><h2 id="array的迭代-🗡-1" tabindex="-1"><code>Array</code>的迭代 🗡 <a class="header-anchor" href="#array的迭代-🗡-1" aria-label="Permalink to &quot;\`Array\`的迭代 🗡&quot;">​</a></h2><ul><li><p><code>every(func)</code>: 对每个元素调用<code>func</code>，如果所有<code>func</code>都返回<code>true</code>，则返回<code>true</code>。</p></li><li><p><code>some(func)</code>: 对每个元素调用<code>func</code>，如果任意一个<code>func</code>返回<code>true</code>，则返回<code>true</code>。</p></li><li><p><code>find(func)</code>: 对每个元素调用<code>func</code>，返回第一个<code>func</code>返回<code>true</code>的元素。</p></li><li><p><code>findIndex(func)</code>: 对每个元素调用<code>func</code>，返回第一个<code>func</code>返回<code>true</code>的元素的索引。</p></li><li><p>其它数组方法：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array</a></p></li></ul><hr><h2 id="set" tabindex="-1"><code>Set</code> <a class="header-anchor" href="#set" aria-label="Permalink to &quot;\`Set\`&quot;">​</a></h2><p>与数组不同的是，集合<strong>没有索引或顺序，也不允许重复</strong>：一个值要么是集合的成员，要么不是；不可能存在一个值在一个集合中出现多次。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let set = new Set([1, 2, 3])</span></span>
<span class="line"><span>set.add(4)</span></span>
<span class="line"><span>set.delete(2)</span></span>
<span class="line"><span>set.has(3) // true</span></span>
<span class="line"><span>set.size // 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="map" tabindex="-1"><code>Map</code> <a class="header-anchor" href="#map" aria-label="Permalink to &quot;\`Map\`&quot;">​</a></h2><p><code>Map</code>对象保存键值对。任何值(对象或者原始值) 都可以作为一个键或一个值。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let map = new Map()</span></span>
<span class="line"><span>map.set(&#39;name&#39;, &#39;Alice&#39;)</span></span>
<span class="line"><span>map.set(&#39;age&#39;, 20)</span></span>
<span class="line"><span>map.get(&#39;name&#39;) // &#39;Alice&#39;</span></span>
<span class="line"><span>map.has(&#39;age&#39;) // true</span></span>
<span class="line"><span>map.delete(&#39;age&#39;)</span></span>
<span class="line"><span>map.size // 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h2 id="array-set-map-object之间的转换" tabindex="-1"><code>Array</code>, <code>Set</code>, <code>Map</code>, <code>Object</code>之间的转换 <a class="header-anchor" href="#array-set-map-object之间的转换" aria-label="Permalink to &quot;\`Array\`, \`Set\`, \`Map\`, \`Object\`之间的转换&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>graph LR</span></span>
<span class="line"><span>    A[Array]</span></span>
<span class="line"><span>    C[Array with entries]</span></span>
<span class="line"><span>    D[Object]</span></span>
<span class="line"><span>    E[Set]</span></span>
<span class="line"><span>    F[Map]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    D --&gt; |Object.keys/values| A</span></span>
<span class="line"><span>    D --&gt; |Object.entries| C</span></span>
<span class="line"><span>    C --&gt; |new Map| F</span></span>
<span class="line"><span>    F --&gt; |&quot;Array.from&quot;| C</span></span>
<span class="line"><span>    F --&gt; |&quot;[...map.keys/values]&quot;| A</span></span>
<span class="line"><span>    F --&gt; |Object.fromEntries| D</span></span>
<span class="line"><span>    C --&gt; |Object.fromEntries| D</span></span>
<span class="line"><span>    A --&gt; |new Set| E</span></span>
<span class="line"><span>    E --&gt; |Array.from| A</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><hr><h2 id="regexp" tabindex="-1"><code>RegExp</code> <a class="header-anchor" href="#regexp" aria-label="Permalink to &quot;\`RegExp\`&quot;">​</a></h2><p>学习正则表达式：<a href="https://www.youtube.com/watch?v=uPBtum7QRvw" target="_blank" rel="noreferrer">Geek Hour</a></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;JavaScript&quot;.search(/script/ui)</span><span>  // =&gt; 4</span></span>
<span class="line"><span>&quot;Python&quot;.search(/script/ui)</span><span>  // =&gt; -1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>let quote = /&quot;([^&quot;]*)&quot;/g  </span></span>
<span class="line"><span>&#39;He said &quot;stop&quot;&#39;.replace(quote, &#39;&lt;q&gt;$1&lt;/q&gt;&#39;)</span><span>  // =&gt; &#39;He said &lt;q&gt;stop&lt;/q&gt;&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>let quote = /&quot;(?&lt;quote&gt;[^&quot;]*)&quot;/g</span></span>
<span class="line"><span>&#39;He said &quot;stop&quot;&#39;.replace(quote, &#39;&lt;q&gt;$&lt;quote&gt;&lt;/q&gt;&#39;)</span><span>  // =&gt; &#39;He said &lt;q&gt;stop&lt;/q&gt;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>replace</code>传入函数的高级用法：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_the_replacement" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_the_replacement</a></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function replacer(match, p1, p2, p3, offset, string, groups) {</span></span>
<span class="line"><span>  return [p1, p2, p3].join(&quot; - &quot;);</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>const newString = &quot;abc12345#$*%&quot;.replace(/([^\\d]*)(\\d*)([^\\w]*)/, replacer);  // abc - 12345 - #$*%</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let nums = &quot;12345678&quot;</span></span>
<span class="line"><span>nums.match(/\\d/g) // =&gt; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;]</span></span>
<span class="line"><span>nums.match(/\\d/) // =&gt; [&quot;1&quot;, index: 0, input: &quot;12345678&quot;, groups: undefined]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[...nums.matchAll(/\\d/g)] // =&gt; 0: [&#39;1&#39;, index: 0, input: &#39;12345678&#39;, groups: undefined]</span></span>
<span class="line"><span>                          //    1: [&#39;2&#39;, index: 1, input: &#39;12345678&#39;, groups: undefined]</span></span>
<span class="line"><span>                          //    ...</span></span>
<span class="line"><span>                          //    7: [&#39;8&#39;, index: 7, input: &#39;12345678&#39;, groups: undefined]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>⚠️ <strong>会被g标志影响的方法</strong>：<code>String.match()</code>, <code>String.replace()</code>。</p><p>⚠️ <strong>不会被g标志影响的方法</strong>：<code>String.search()</code></p><p>⚠️ <strong>必须带g标志的方法</strong>：<code>String.matchAll()</code>。</p><p><code>RegExp</code>的方法：</p><p><code>test()</code>: 返回一个布尔值，表示当前模式是否能匹配参数字符串。</p><p><code>exec()</code>: 始终返回一个匹配项。每次匹配后会更新搜索起点。</p><hr><h2 id="date" tabindex="-1"><code>Date</code> <a class="header-anchor" href="#date" aria-label="Permalink to &quot;\`Date\`&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let date = new Date()</span></span>
<span class="line"><span>date.getFullYear() // =&gt; 2025</span></span>
<span class="line"><span>date.getMonth() // =&gt; 0 (0表示1月)</span></span>
<span class="line"><span>date.getDate() // =&gt; 1</span></span>
<span class="line"><span>date.getDay() // =&gt; 0 (0表示星期日)</span></span>
<span class="line"><span>date.getTime() // =&gt; 1704128000000 (时间戳，毫秒)</span></span>
<span class="line"><span>date.setFullYear(2020) // =&gt; 1577836800000</span></span>
<span class="line"><span>date.setMonth(date.getMonth() + 1) // 可进行计算</span></span>
<span class="line"><span>date &gt; new Date(2020, 0, 1) // =&gt; true，可进行比较</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>更多用法：<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date" target="_blank" rel="noreferrer">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date</a></p>`,95)]))}const m=a(l,[["render",i]]);export{u as __pageData,m as default};
