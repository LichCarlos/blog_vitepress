import{_ as i,a,o as t,a2 as e}from"./chunks/framework.CFrKc_nk.js";const g=JSON.parse('{"title":"成绩管理系统","description":"","frontmatter":{},"headers":[],"relativePath":"lab/backend/examine.md","filePath":"lab/backend/examine.md","lastUpdated":1741325266000}'),r={name:"lab/backend/examine.md"};function o(n,l,s,h,d,u){return t(),a("div",null,l[0]||(l[0]=[e('<h1 id="成绩管理系统" tabindex="-1">成绩管理系统 <a class="header-anchor" href="#成绩管理系统" aria-label="Permalink to &quot;成绩管理系统&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>新成员进入部门，经过几个月的培训，已经掌握了Java基础知识、Java面向对象、MySQL数据库应用，了解了IO概念和应用。因此，为了加强新成员的实际应用能力培养，故提出成绩管理系统。</p><h2 id="功能要求" tabindex="-1">功能要求 <a class="header-anchor" href="#功能要求" aria-label="Permalink to &quot;功能要求&quot;">​</a></h2><p>成绩管理系统主要实现教师对学生成绩的管理。具体的功能要求如下：</p><h3 id="教师管理" tabindex="-1">教师管理 <a class="header-anchor" href="#教师管理" aria-label="Permalink to &quot;教师管理&quot;">​</a></h3><ol><li><strong>教师注册和登录</strong><ul><li><strong>教师注册</strong>：教师首次使用本系统时，需要先进行注册，注册时需输入账号、密码和确认密码。</li><li><strong>教师登录</strong>：教师登录时需要使用之前注册的账号进行登录。登录时需输入账号和密码。</li></ul></li></ol><h3 id="学生管理" tabindex="-1">学生管理 <a class="header-anchor" href="#学生管理" aria-label="Permalink to &quot;学生管理&quot;">​</a></h3><ol><li><strong>添加学生</strong>：教师可以添加学生。 <ul><li>输入方式：教师可以通过输入学生的信息（姓名、学号、年级、班级、专业、联系方式）进行学生添加。</li><li>导入方式（选做）：教师可以通过Excel导入学生信息。</li></ul></li><li><strong>学生浏览</strong>：教师可以浏览学生信息，以列表（表格）形式展示，并支持根据学号、姓名、年级、班级进行查询。</li><li><strong>学生信息查看</strong>：教师可以输入学生学号查看每个学生的信息。</li><li><strong>学生信息修改</strong>：教师可以修改每个学生的信息，但学号不可修改。</li><li><strong>学生删除</strong>：教师可以根据学号删除学生信息。</li></ol><h3 id="成绩管理" tabindex="-1">成绩管理 <a class="header-anchor" href="#成绩管理" aria-label="Permalink to &quot;成绩管理&quot;">​</a></h3><ol><li><strong>学生成绩录入</strong>：教师可以给每个学生录入成绩，包括计算机导论、程序设计基础（Python）、Web应用开发（Java），并计算总分、平均分。</li><li><strong>学生成绩查看</strong>：以列表的形式展示学生的成绩信息（单科和总成绩、平均分）。</li><li><strong>学生成绩修改</strong>：教师可以修改每个学生的成绩。</li><li><strong>根据学生成绩排名</strong><ul><li>根据总分对学生进行排名，从高到低排序。</li><li>根据单科成绩对学生进行排名，从高到低排序。</li></ul></li></ol><h2 id="技术要求" tabindex="-1">技术要求 <a class="header-anchor" href="#技术要求" aria-label="Permalink to &quot;技术要求&quot;">​</a></h2><ul><li><strong>开发语言</strong>：Java。</li><li><strong>数据存储</strong>：MySQL数据库。</li><li><strong>Excel导入</strong>：涉及IO操作及Excel处理。</li><li><strong>学生成绩排名</strong>：涉及排序算法。</li></ul><h2 id="实现效果" tabindex="-1">实现效果 <a class="header-anchor" href="#实现效果" aria-label="Permalink to &quot;实现效果&quot;">​</a></h2><p>整个项目的功能操作可以在控制台上进行正常操作，系统能正常运行。</p><h2 id="实现流程" tabindex="-1">实现流程 <a class="header-anchor" href="#实现流程" aria-label="Permalink to &quot;实现流程&quot;">​</a></h2><ol><li>教师先注册，注册成功后进入登录；注册失败则提示重新注册。</li><li>教师登录，登录成功后进入系统；登录失败则提示重新登录。</li><li>登录成功后显示： <ul><li>1.学生管理</li><li>2.成绩管理</li><li>0.退出系统 输入1或2选择功能。</li></ul></li><li>输入1选择学生管理功能，界面如下： <ul><li>1.浏览学生信息</li><li>2.添加学生信息</li><li>3.修改学生信息</li><li>4.删除学生信息</li><li>5.查询学生信息</li><li>0.返回上一级 输入数字选择对应功能。</li><li>浏览学生信息：以列表形式展示学生信息。</li><li>添加学生信息： <ul><li>1.录入学生信息</li><li>2.导入学生信息</li><li>0.返回上一级 输入数字选择对应功能。</li></ul></li><li>修改学生信息：可修改姓名、年级、专业、联系方式。</li><li>删除学生信息：需输入学生学号。</li><li>查询学生信息：根据学号、姓名、年级或专业查询。</li></ul></li><li>输入2选择成绩管理功能，界面如下： <ul><li>1.浏览学生成绩</li><li>2.录入学生成绩</li><li>3.修改学生成绩</li><li>4.学生成绩排序</li><li>0.返回上一级 输入数字选择对应功能。</li><li>浏览学生成绩：以列表形式展示学生信息和成绩。</li><li>录入学生成绩：显示学生信息，录入各科成绩。</li><li>修改学生成绩：录入学生各科成绩。</li><li>学生成绩排序： <ul><li>1.总分排序</li><li>2.单科排序</li><li>0.返回上一级 输入数字选择对应功能。</li></ul></li></ul></li></ol>',17)]))}const b=i(r,[["render",o]]);export{g as __pageData,b as default};
