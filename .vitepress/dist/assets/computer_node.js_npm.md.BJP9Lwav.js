import{_ as a,a as i,o as e,a2 as n}from"./chunks/framework.CFrKc_nk.js";const k=JSON.parse('{"title":"npm - Node Package Manager","description":"","frontmatter":{},"headers":[],"relativePath":"computer/node.js/npm.md","filePath":"computer/node.js/npm.md","lastUpdated":1739699399000}'),l={name:"computer/node.js/npm.md"};function p(t,s,h,d,r,o){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="npm-node-package-manager" tabindex="-1">npm - Node Package Manager <a class="header-anchor" href="#npm-node-package-manager" aria-label="Permalink to &quot;npm - Node Package Manager&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>npm（Node Package Manager）是用于管理JavaScript软件包的工具，主要用于Node.js应用程序。它不仅是一个命令行工具，也是世界上最大的开源软件注册表之一，拥有超过百万个代码包供开发者使用和贡献。</p><h2 id="npm安装" tabindex="-1">npm安装 <a class="header-anchor" href="#npm安装" aria-label="Permalink to &quot;npm安装&quot;">​</a></h2><p>在上一节安装node.js时已同步安装。</p><p>安装完成后，你可以通过命令提示符（Command Prompt）、PowerShell或任何其他终端模拟器来验证是否成功安装了npm：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="package-json-文件" tabindex="-1">package.json 文件 <a class="header-anchor" href="#package-json-文件" aria-label="Permalink to &quot;package.json 文件&quot;">​</a></h2><p><code>package.json</code> 是一个JSON格式的文件，包含了关于Node.js项目的元数据和依赖关系的信息。它是每个Node.js项目的核心配置文件。</p><h3 id="版本号规则" tabindex="-1">版本号规则 <a class="header-anchor" href="#版本号规则" aria-label="Permalink to &quot;版本号规则&quot;">​</a></h3><p>如1.0.0</p><p>版本号遵循语义化版本控制（SemVer），由三部分组成：</p><ul><li><strong>主版本号</strong>：表示不兼容的API修改（如从Vue 2升级到Vue 3）</li><li><strong>次版本号</strong>：表示向后兼容的功能性更新（如Vue编译宏从3.0.0更新到3.1.0）</li><li><strong>修订号</strong>：表示向后兼容的bug修复</li></ul><h3 id="依赖类型" tabindex="-1">依赖类型 <a class="header-anchor" href="#依赖类型" aria-label="Permalink to &quot;依赖类型&quot;">​</a></h3><ul><li><strong>dependencies</strong>：生产环境依赖项，即项目运行所必需的库。<div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者简写为</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><strong>devDependencies</strong>：开发环境依赖项（生产环境），仅在开发和构建过程中需要的库。可以通过以下命令安装：<div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者简写为</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><strong>peerdevDependencies</strong>：对等依赖，为编写插件人员使用/编写npm包的开发人员使用。</li></ul><p>如vite plugin 插件不能够凭空运行，所需的宿主环境依赖于vite</p><h2 id="npm-命令参考" tabindex="-1">npm 命令参考 <a class="header-anchor" href="#npm-命令参考" aria-label="Permalink to &quot;npm 命令参考&quot;">​</a></h2><h3 id="_1-查看node-js配置" tabindex="-1">1. 查看Node.js配置 <a class="header-anchor" href="#_1-查看node-js配置" aria-label="Permalink to &quot;1. 查看Node.js配置&quot;">​</a></h3><p>查看Node.js的版本或其他配置信息，可以使用如下命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 或 node --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2-初始化项目" tabindex="-1">2. 初始化项目 <a class="header-anchor" href="#_2-初始化项目" aria-label="Permalink to &quot;2. 初始化项目&quot;">​</a></h3><p>在开始一个新的Node.js项目时，你需要初始化一个新的<code>package.json</code>文件。这个文件描述了你的项目的配置信息以及依赖关系。你可以在项目的根目录下运行以下命令来生成它：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中在使用 npm init -y 命令时，-y 选项（也可以写作 --yes）的作用是自动接受所有默认设置，并且不提示用户输入信息。它会读取当前目录下已有的 package.json 文件（如果存在），或者使用一组默认值来创建一个新的 package.json 文件。</p><h3 id="_3-下载依赖" tabindex="-1">3. 下载依赖 <a class="header-anchor" href="#_3-下载依赖" aria-label="Permalink to &quot;3. 下载依赖&quot;">​</a></h3><p>要安装一个软件包到你的项目中，可以使用以下命令：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你想安装一个开发依赖项devDependencies（仅在开发环境中需要），可以使用--save-dev选项：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-npm-config-list查看npm的配置列表" tabindex="-1">4. npm config list查看npm的配置列表 <a class="header-anchor" href="#_4-npm-config-list查看npm的配置列表" aria-label="Permalink to &quot;4. npm config list查看npm的配置列表&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_5-全局安装" tabindex="-1">5. 全局安装 <a class="header-anchor" href="#_5-全局安装" aria-label="Permalink to &quot;5. 全局安装&quot;">​</a></h3><p>有时候你可能想要全局安装一些工具，这样就可以在整个系统中使用它们。使用-g选项来全局安装：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：在Windows上进行全局安装时，有时会遇到权限问题。如果你遇到这样的问题，尝试以管理员身份运行命令提示符或PowerShell。</p><h3 id="_6-更新包" tabindex="-1">6. 更新包 <a class="header-anchor" href="#_6-更新包" aria-label="Permalink to &quot;6. 更新包&quot;">​</a></h3><p>随着时间的推移，软件包会发布新的版本。你可以使用以下命令来更新本地安装的包：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>要更新所有过时的包，只需运行：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_7-卸载包" tabindex="-1">7. 卸载包 <a class="header-anchor" href="#_7-卸载包" aria-label="Permalink to &quot;7. 卸载包&quot;">​</a></h3><p>如果不再需要某个包，你可以使用以下命令将其卸载：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你之前是在全局安装的包，记得加上-g选项：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_8-查看全局的可执行文件" tabindex="-1">8. 查看全局的可执行文件 <a class="header-anchor" href="#_8-查看全局的可执行文件" aria-label="Permalink to &quot;8. 查看全局的可执行文件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_9-查看帮助" tabindex="-1">9. 查看帮助 <a class="header-anchor" href="#_9-查看帮助" aria-label="Permalink to &quot;9. 查看帮助&quot;">​</a></h3><p>如需更多帮助，可以随时查看npm的帮助文档：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="更多帮助请查看node-js官网" tabindex="-1">更多帮助请查看Node.js官网 <a class="header-anchor" href="#更多帮助请查看node-js官网" aria-label="Permalink to &quot;更多帮助请查看Node.js官网&quot;">​</a></h2><p><strong>访问官方站点</strong>：前往 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官方网站</a>。</p>`,52)]))}const g=a(l,[["render",p]]);export{k as __pageData,g as default};
