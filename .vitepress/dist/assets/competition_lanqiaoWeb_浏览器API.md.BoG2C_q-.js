import{_ as s,a as n,o as e,a2 as l}from"./chunks/framework.Dy7Nxh_Q.js";const b=JSON.parse('{"title":"浏览器API","description":"","frontmatter":{},"headers":[],"relativePath":"competition/lanqiaoWeb/浏览器API.md","filePath":"competition/lanqiaoWeb/浏览器API.md","lastUpdated":1743996090000}'),i={name:"competition/lanqiaoWeb/浏览器API.md"};function p(t,a,r,o,c,d){return e(),n("div",null,a[0]||(a[0]=[l(`<h1 id="浏览器api" tabindex="-1">浏览器API <a class="header-anchor" href="#浏览器api" aria-label="Permalink to &quot;浏览器API&quot;">​</a></h1><h2 id="浏览器api-概述" tabindex="-1">浏览器API 概述 <a class="header-anchor" href="#浏览器api-概述" aria-label="Permalink to &quot;浏览器API 概述&quot;">​</a></h2><p>在蓝桥杯Web组的省赛备赛中，了解浏览器API非常重要，以下是一些关键内容：</p><h3 id="主要内容" tabindex="-1">主要内容 <a class="header-anchor" href="#主要内容" aria-label="Permalink to &quot;主要内容&quot;">​</a></h3><ul><li><strong>CSS选择器</strong></li><li><strong>文档结构与遍历</strong></li><li><strong>属性操作</strong></li><li><strong>元素内容操作</strong></li><li><strong>节点操作</strong></li><li><strong>样式操作</strong></li></ul><hr><h2 id="css选择器" tabindex="-1">CSS选择器 <a class="header-anchor" href="#css选择器" aria-label="Permalink to &quot;CSS选择器&quot;">​</a></h2><p>浏览器提供了 <code>document.querySelector</code> 和 <code>document.querySelectorAll</code> 方法，可以根据 CSS 选择器获取 DOM 元素。</p><h3 id="选择器示例" tabindex="-1">选择器示例 <a class="header-anchor" href="#选择器示例" aria-label="Permalink to &quot;选择器示例&quot;">​</a></h3><ul><li><p><strong>通过标签名、id、class</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>div</span></span>
<span class="line"><span>#nav</span></span>
<span class="line"><span>.warning</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>通过属性</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>p[lang=&quot;fr&quot;]</span></span>
<span class="line"><span>*[name=&quot;x&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><strong>组合选择器</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>span.fatal.error // 同时满足</span></span>
<span class="line"><span>img, video      // 满足其一</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><strong>层级选择</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#log span</span><span>       // 后代</span></span>
<span class="line"><span>#log &gt; span</span><span>     // 子代</span></span>
<span class="line"><span>body &gt; h1 :first-child  // 伪类</span></span>
<span class="line"><span>img + p.caption // 紧邻</span></span>
<span class="line"><span>img ~ p.caption // 兄弟</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><hr><h2 id="练习" tabindex="-1">练习 <a class="header-anchor" href="#练习" aria-label="Permalink to &quot;练习&quot;">​</a></h2><p>给定以下 HTML 结构：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;h2&gt;</span></span>
<span class="line"><span>  &lt;img /&gt;</span></span>
<span class="line"><span>  &lt;div&gt;</span></span>
<span class="line"><span>    &lt;p id=&quot;p1&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span>    &lt;p id=&quot;p2&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span>    &lt;p id=&quot;p3&quot;&gt;&lt;/p&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/h2&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="选择器练习" tabindex="-1">选择器练习 <a class="header-anchor" href="#选择器练习" aria-label="Permalink to &quot;选择器练习&quot;">​</a></h3><ol><li><code>h2 img</code></li><li><code>h2 &gt; img</code></li><li><code>h2 #p1</code></li><li><code>h2 &gt; #p1</code></li><li><code>img + div</code></li><li><code>img ~ div</code></li><li><code>#p1 + #p3</code></li><li><code>#p1 ~ #p3</code></li></ol><hr><h2 id="文档结构与遍历" tabindex="-1">文档结构与遍历 <a class="header-anchor" href="#文档结构与遍历" aria-label="Permalink to &quot;文档结构与遍历&quot;">​</a></h2><p><strong>Element对象</strong>的方法：</p><ul><li><code>parentElement</code></li><li><code>children</code></li><li><code>firstElementChild</code></li><li><code>lastElementChild</code></li><li><code>nextElementSibling</code></li><li><code>previousElementSibling</code></li></ul><p>这些方法不包括文本节点和注释节点。有关 Node 对象的更多信息，请访问 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node" target="_blank" rel="noreferrer">MDN</a>。</p><hr><h2 id="属性操作" tabindex="-1">属性操作 <a class="header-anchor" href="#属性操作" aria-label="Permalink to &quot;属性操作&quot;">​</a></h2><h3 id="html属性" tabindex="-1">HTML属性 <a class="header-anchor" href="#html属性" aria-label="Permalink to &quot;HTML属性&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let image = document.querySelector(&#39;#main_img&#39;);</span></span>
<span class="line"><span>let url = image.src; // 获取图片源</span></span>
<span class="line"><span>image.id === &#39;main_img&#39;; // 检查id</span></span>
<span class="line"><span></span></span>
<span class="line"><span>let f = document.querySelector(&#39;#form&#39;);</span></span>
<span class="line"><span>f.action = &quot;测试的网址&quot;; // 设置表单的 action</span></span>
<span class="line"><span>f.method = &#39;POST&#39;; // 设置表单方法</span></span>
<span class="line"><span></span></span>
<span class="line"><span>let button = document.querySelector(&#39;#submit&#39;);</span></span>
<span class="line"><span>button.onclick = function() {</span></span>
<span class="line"><span>  alert(&#39;Button clicked&#39;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>注意：<code>class</code> 映射到 <code>classList</code>，<code>for</code> 映射到 <code>htmlFor</code>。</p><h3 id="classlist-操作" tabindex="-1">classList 操作 <a class="header-anchor" href="#classlist-操作" aria-label="Permalink to &quot;classList 操作&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let spinner = document.querySelector(&#39;#spinner&#39;);</span></span>
<span class="line"><span>spinner.classList.has(&#39;show&#39;); // 检查class是否存在</span></span>
<span class="line"><span>spinner.classList.add(&#39;show&#39;); // 添加class</span></span>
<span class="line"><span>spinner.classList.remove(&#39;show&#39;); // 移除class</span></span>
<span class="line"><span>spinner.classList.toggle(&#39;show&#39;); // 切换class</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h3 id="通用属性管理" tabindex="-1">通用属性管理 <a class="header-anchor" href="#通用属性管理" aria-label="Permalink to &quot;通用属性管理&quot;">​</a></h3><ul><li><code>getAttribute(name)</code>：获取属性值</li><li><code>setAttribute(name, value)</code>：设置属性值</li><li><code>removeAttribute(name)</code>：移除属性</li><li><code>hasAttribute(name)</code>：检查属性是否存在</li></ul><hr><h2 id="元素内容操作" tabindex="-1">元素内容操作 <a class="header-anchor" href="#元素内容操作" aria-label="Permalink to &quot;元素内容操作&quot;">​</a></h2><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;div id=&quot;target&quot;&gt;</span></span>
<span class="line"><span>  This is the element content.</span></span>
<span class="line"><span>&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="操作方法" tabindex="-1">操作方法 <a class="header-anchor" href="#操作方法" aria-label="Permalink to &quot;操作方法&quot;">​</a></h3><ol><li><code>innerHTML</code></li><li><code>ele.innerHTML = &quot;Inserted here&quot; + ele.innerHTML</code></li><li><code>ele.innerHTML += &quot;Inserted here&quot;</code></li><li><code>outerHTML</code></li><li><code>ele.outerHTML = &quot;Inserted here&quot; + ele.outerHTML</code></li><li><code>ele.outerHTML += &quot;Inserted here&quot;</code></li></ol><p>使用 <code>textContent</code> 获取或插入纯文本内容。</p><hr><h2 id="创建、插入和删除节点" tabindex="-1">创建、插入和删除节点 <a class="header-anchor" href="#创建、插入和删除节点" aria-label="Permalink to &quot;创建、插入和删除节点&quot;">​</a></h2><h3 id="创建节点" tabindex="-1">创建节点 <a class="header-anchor" href="#创建节点" aria-label="Permalink to &quot;创建节点&quot;">​</a></h3><p>使用 <code>document.createElement(tagName)</code> 创建新元素。</p><h3 id="插入节点" tabindex="-1">插入节点 <a class="header-anchor" href="#插入节点" aria-label="Permalink to &quot;插入节点&quot;">​</a></h3><p>使用以下方法插入元素或文本：</p><ul><li><code>append(node)</code></li><li><code>prepend(node)</code></li><li><code>before(node)</code></li><li><code>after(node)</code></li><li><code>replaceWith(node)</code></li></ul><h3 id="删除节点" tabindex="-1">删除节点 <a class="header-anchor" href="#删除节点" aria-label="Permalink to &quot;删除节点&quot;">​</a></h3><p>使用 <code>remove()</code> 删除元素。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let para = document.createElement(&#39;p&#39;);</span></span>
<span class="line"><span>let img = document.createElement(&#39;img&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>para.append(&quot;World!&quot;);</span></span>
<span class="line"><span>para.prepend(&quot;Hello, &quot;);</span></span>
<span class="line"><span>para.after(img);</span></span>
<span class="line"><span>para.before(img);</span></span>
<span class="line"><span>para.replaceWith(img);</span></span>
<span class="line"><span>para.remove(); // 删除自己</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><h2 id="操作css" tabindex="-1">操作CSS <a class="header-anchor" href="#操作css" aria-label="Permalink to &quot;操作CSS&quot;">​</a></h2><h3 id="基于class的样式" tabindex="-1">基于class的样式 <a class="header-anchor" href="#基于class的样式" aria-label="Permalink to &quot;基于class的样式&quot;">​</a></h3><p>参考 <a href="./6?clicks=11">classList</a>。</p><h3 id="基于style的样式" tabindex="-1">基于style的样式 <a class="header-anchor" href="#基于style的样式" aria-label="Permalink to &quot;基于style的样式&quot;">​</a></h3><p>常用的 CSS 属性在 <code>Element.style</code> 上，使用小驼峰命名，并包含单位。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function displayAt(tooltip, x, y) {</span></span>
<span class="line"><span>  tooltip.style.left = x + &#39;px&#39;;</span></span>
<span class="line"><span>  tooltip.style.top = y + &#39;px&#39;;</span></span>
<span class="line"><span>  tooltip.style.display = &#39;block&#39;;</span></span>
<span class="line"><span>  tooltip.style.position = &#39;absolute&#39;;</span></span>
<span class="line"><span>  tooltip.style.backgroundColor = &#39;white&#39;;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="计算样式" tabindex="-1">计算样式 <a class="header-anchor" href="#计算样式" aria-label="Permalink to &quot;计算样式&quot;">​</a></h3><p>计算属性是只读的，任何指定大小的属性都将以像素度量。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let title = document.querySelector(&#39;h1&#39;);</span></span>
<span class="line"><span>let fontSize = window.getComputedStyle(title).fontSize;</span></span>
<span class="line"><span>console.log(fontSize); // &quot;16px&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><p>以上是关于浏览器API的基本知识，希望对你的备赛有所帮助！如果有任何问题，请随时询问。</p>`,60)]))}const h=s(i,[["render",p]]);export{b as __pageData,h as default};
