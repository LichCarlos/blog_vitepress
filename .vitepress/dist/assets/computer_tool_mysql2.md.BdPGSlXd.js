import{_ as s,a as t,o as i,a2 as e}from"./chunks/framework.Dy7Nxh_Q.js";const b=JSON.parse('{"title":"MySQL 进阶教程","description":"","frontmatter":{},"headers":[],"relativePath":"computer/tool/mysql2.md","filePath":"computer/tool/mysql2.md","lastUpdated":1741767774000}'),n={name:"computer/tool/mysql2.md"};function l(h,a,d,r,p,o){return i(),t("div",null,a[0]||(a[0]=[e(`<h1 id="mysql-进阶教程" tabindex="-1">MySQL 进阶教程 <a class="header-anchor" href="#mysql-进阶教程" aria-label="Permalink to &quot;MySQL 进阶教程&quot;">​</a></h1><p>本文将介绍 MySQL 数据库的事务、范式以及其他进阶主题。</p><h2 id="_1-数据库事务" tabindex="-1">1. 数据库事务 <a class="header-anchor" href="#_1-数据库事务" aria-label="Permalink to &quot;1. 数据库事务&quot;">​</a></h2><p>数据库事务是一个逻辑操作单元，由一系列 SQL 语句组成，这些语句要么全部执行成功，要么全部不执行。事务具有以下四个特性（ACID）：</p><ul><li><strong>原子性 (Atomicity)</strong>: 事务中的所有操作要么全部完成，要么全部不完成。</li><li><strong>一致性 (Consistency)</strong>: 事务开始前和结束后，数据库的状态必须保持一致。</li><li><strong>隔离性 (Isolation)</strong>: 事务的执行不应受其他事务的影响。</li><li><strong>持久性 (Durability)</strong>: 一旦事务提交，其结果是永久性的，即使系统崩溃也不会丢失。</li></ul><h3 id="_1-1-开始事务" tabindex="-1">1.1 开始事务 <a class="header-anchor" href="#_1-1-开始事务" aria-label="Permalink to &quot;1.1 开始事务&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">START TRANSACTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-2-提交事务" tabindex="-1">1.2 提交事务 <a class="header-anchor" href="#_1-2-提交事务" aria-label="Permalink to &quot;1.2 提交事务&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-3-回滚事务" tabindex="-1">1.3 回滚事务 <a class="header-anchor" href="#_1-3-回滚事务" aria-label="Permalink to &quot;1.3 回滚事务&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ROLLBACK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-4-事务示例" tabindex="-1">1.4 事务示例 <a class="header-anchor" href="#_1-4-事务示例" aria-label="Permalink to &quot;1.4 事务示例&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">START TRANSACTION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> accounts (user, balance) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Alice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> accounts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> balance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> balance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Bob&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_2-数据库范式" tabindex="-1">2. 数据库范式 <a class="header-anchor" href="#_2-数据库范式" aria-label="Permalink to &quot;2. 数据库范式&quot;">​</a></h2><p>数据库范式是设计数据库时的一种指导原则，旨在减少数据冗余和提高数据完整性。常见的范式有：</p><ul><li><strong>第一范式 (1NF)</strong>: 确保每个列的值都是原子性的，即不可再分。</li><li><strong>第二范式 (2NF)</strong>: 在满足 1NF 的基础上，确保每个非主属性完全依赖于主键。</li><li><strong>第三范式 (3NF)</strong>: 在满足 2NF 的基础上，确保非主属性不依赖于其他非主属性。</li></ul><h3 id="_2-1-第一范式示例" tabindex="-1">2.1 第一范式示例 <a class="header-anchor" href="#_2-1-第一范式示例" aria-label="Permalink to &quot;2.1 第一范式示例&quot;">​</a></h3><p>不符合 1NF 的数据表：</p><table tabindex="0"><thead><tr><th>ID</th><th>Name</th><th>Phone Numbers</th></tr></thead><tbody><tr><td>1</td><td>John Doe</td><td>1234567890, 0987654321</td></tr></tbody></table><p>符合 1NF 的数据表：</p><table tabindex="0"><thead><tr><th>ID</th><th>Name</th><th>Phone Number</th></tr></thead><tbody><tr><td>1</td><td>John Doe</td><td>1234567890</td></tr><tr><td>1</td><td>John Doe</td><td>0987654321</td></tr></tbody></table><h3 id="_2-2-第二范式示例" tabindex="-1">2.2 第二范式示例 <a class="header-anchor" href="#_2-2-第二范式示例" aria-label="Permalink to &quot;2.2 第二范式示例&quot;">​</a></h3><p>不符合 2NF 的数据表：</p><table tabindex="0"><thead><tr><th>OrderID</th><th>ProductID</th><th>ProductName</th><th>CustomerID</th></tr></thead><tbody><tr><td>1</td><td>101</td><td>Widget</td><td>1</td></tr><tr><td>1</td><td>102</td><td>Gadget</td><td>1</td></tr></tbody></table><p>符合 2NF 的数据表：</p><p><strong>Orders 表</strong></p><table tabindex="0"><thead><tr><th>OrderID</th><th>CustomerID</th></tr></thead><tbody><tr><td>1</td><td>1</td></tr></tbody></table><p><strong>Products 表</strong></p><table tabindex="0"><thead><tr><th>ProductID</th><th>ProductName</th></tr></thead><tbody><tr><td>101</td><td>Widget</td></tr><tr><td>102</td><td>Gadget</td></tr></tbody></table><p><strong>OrderDetails 表</strong></p><table tabindex="0"><thead><tr><th>OrderID</th><th>ProductID</th></tr></thead><tbody><tr><td>1</td><td>101</td></tr><tr><td>1</td><td>102</td></tr></tbody></table><h3 id="_2-3-第三范式示例" tabindex="-1">2.3 第三范式示例 <a class="header-anchor" href="#_2-3-第三范式示例" aria-label="Permalink to &quot;2.3 第三范式示例&quot;">​</a></h3><p>不符合 3NF 的数据表：</p><table tabindex="0"><thead><tr><th>StudentID</th><th>StudentName</th><th>AdvisorName</th></tr></thead><tbody><tr><td>1</td><td>Alice</td><td>Dr. Smith</td></tr></tbody></table><p>符合 3NF 的数据表：</p><p><strong>Students 表</strong></p><table tabindex="0"><thead><tr><th>StudentID</th><th>StudentName</th></tr></thead><tbody><tr><td>1</td><td>Alice</td></tr></tbody></table><p><strong>Advisors 表</strong></p><table tabindex="0"><thead><tr><th>AdvisorID</th><th>AdvisorName</th></tr></thead><tbody><tr><td>1</td><td>Dr. Smith</td></tr></tbody></table><p><strong>StudentAdvisors 表</strong></p><table tabindex="0"><thead><tr><th>StudentID</th><th>AdvisorID</th></tr></thead><tbody><tr><td>1</td><td>1</td></tr></tbody></table><h2 id="_3-其他进阶主题" tabindex="-1">3. 其他进阶主题 <a class="header-anchor" href="#_3-其他进阶主题" aria-label="Permalink to &quot;3. 其他进阶主题&quot;">​</a></h2><h3 id="_3-1-索引" tabindex="-1">3.1 索引 <a class="header-anchor" href="#_3-1-索引" aria-label="Permalink to &quot;3.1 索引&quot;">​</a></h3><p>索引是提高查询性能的一种数据结构。可以通过以下命令创建索引：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (column_name);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-2-视图" tabindex="-1">3.2 视图 <a class="header-anchor" href="#_3-2-视图" aria-label="Permalink to &quot;3.2 视图&quot;">​</a></h3><p>视图是基于 SQL 查询的虚拟表，可以简化复杂查询。创建视图的命令如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VIEW</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1, column2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> condition;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-3-存储过程" tabindex="-1">3.3 存储过程 <a class="header-anchor" href="#_3-3-存储过程" aria-label="Permalink to &quot;3.3 存储过程&quot;">​</a></h3><p>存储过程是一组预编译的 SQL 语句，可以通过名称调用。创建存储过程的命令如下：</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PROCEDURE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> procedure_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    -- SQL 语句</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_4-结语" tabindex="-1">4. 结语 <a class="header-anchor" href="#_4-结语" aria-label="Permalink to &quot;4. 结语&quot;">​</a></h2><p>本文介绍了 MySQL 的事务、范式以及其他进阶主题。希望能帮助您更深入地理解和使用 MySQL 数据库。更多详细信息请参考 <a href="https://dev.mysql.com/doc/" target="_blank" rel="noreferrer">MySQL 官方文档</a>.</p>`,53)]))}const c=s(n,[["render",l]]);export{b as __pageData,c as default};
