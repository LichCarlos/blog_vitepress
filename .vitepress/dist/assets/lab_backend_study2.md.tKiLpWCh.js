import{_ as i,a as s,o as t,a2 as n}from"./chunks/framework.CFrKc_nk.js";const k=JSON.parse('{"title":"从Java项目到Spring Boot的进阶学习建议","description":"","frontmatter":{},"headers":[],"relativePath":"lab/backend/study2.md","filePath":"lab/backend/study2.md","lastUpdated":1741325266000}'),r={name:"lab/backend/study2.md"};function l(e,a,o,h,d,p){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="从java项目到spring-boot的进阶学习建议" tabindex="-1">从Java项目到Spring Boot的进阶学习建议 <a class="header-anchor" href="#从java项目到spring-boot的进阶学习建议" aria-label="Permalink to &quot;从Java项目到Spring Boot的进阶学习建议&quot;">​</a></h1><hr><h2 id="学习目标" tabindex="-1"><strong>学习目标</strong> <a class="header-anchor" href="#学习目标" aria-label="Permalink to &quot;**学习目标**&quot;">​</a></h2><ol><li>掌握Spring Boot核心开发模式</li><li>将原有控制台项目升级为Web应用</li><li>理解企业级开发规范与架构设计</li></ol><hr><h2 id="技术衔接点" tabindex="-1"><strong>技术衔接点</strong> <a class="header-anchor" href="#技术衔接点" aria-label="Permalink to &quot;**技术衔接点**&quot;">​</a></h2><table tabindex="0"><thead><tr><th>原技术</th><th>新技术</th><th>升级目标</th></tr></thead><tbody><tr><td>原生JDBC</td><td>Spring Data JPA</td><td>简化数据库操作，减少70%的SQL编写量</td></tr><tr><td>控制台交互</td><td>RESTful API + Vue前端</td><td>实现前后端分离架构</td></tr><tr><td>集合存储</td><td>MySQL + Redis缓存</td><td>提升数据访问性能</td></tr><tr><td>手动事务管理</td><td>Spring声明式事务</td><td>通过<code>@Transactional</code>注解自动管理事务</td></tr></tbody></table><hr><h2 id="学习路线与核心内容" tabindex="-1"><strong>学习路线与核心内容</strong> <a class="header-anchor" href="#学习路线与核心内容" aria-label="Permalink to &quot;**学习路线与核心内容**&quot;">​</a></h2><h3 id="第一阶段-spring-boot基础-2周" tabindex="-1"><strong>第一阶段：Spring Boot基础（2周）</strong> <a class="header-anchor" href="#第一阶段-spring-boot基础-2周" aria-label="Permalink to &quot;**第一阶段：Spring Boot基础（2周）**&quot;">​</a></h3><h4 id="重点内容" tabindex="-1"><strong>重点内容</strong> <a class="header-anchor" href="#重点内容" aria-label="Permalink to &quot;**重点内容**&quot;">​</a></h4><ol><li><p><strong>IoC与AOP</strong></p><ul><li>依赖注入（<code>@Autowired</code>）</li><li>切面编程实现日志记录（<code>@Around</code>）</li></ul></li><li><p><strong>Web开发基础</strong></p><ul><li>RESTful API设计规范（<code>@RestController</code>）</li><li>参数校验（<code>@Valid</code> + Hibernate Validator）</li></ul></li><li><p><strong>数据访问</strong></p><ul><li>Spring Data JPA快速CRUD（继承<code>JpaRepository</code>）</li><li>动态查询（<code>JpaSpecificationExecutor</code>）</li></ul></li></ol><h4 id="实战任务" tabindex="-1"><strong>实战任务</strong> <a class="header-anchor" href="#实战任务" aria-label="Permalink to &quot;**实战任务**&quot;">​</a></h4><ul><li>将成绩管理系统的JDBC替换为Spring Data JPA</li><li>开发成绩查询API：<code>GET /api/scores?studentId=1001</code></li></ul><hr><h3 id="第二阶段-企业级功能扩展-3周" tabindex="-1"><strong>第二阶段：企业级功能扩展（3周）</strong> <a class="header-anchor" href="#第二阶段-企业级功能扩展-3周" aria-label="Permalink to &quot;**第二阶段：企业级功能扩展（3周）**&quot;">​</a></h3><h4 id="重点内容-1" tabindex="-1"><strong>重点内容</strong> <a class="header-anchor" href="#重点内容-1" aria-label="Permalink to &quot;**重点内容**&quot;">​</a></h4><ol><li><p><strong>安全与权限</strong></p><ul><li>Spring Security实现RBAC权限模型</li><li>JWT令牌认证（<code>jjwt</code>库）</li></ul></li><li><p><strong>中间件集成</strong></p><ul><li>Redis缓存成绩排名数据（<code>RedisTemplate</code>）</li><li>RabbitMQ异步通知成绩更新</li></ul></li><li><p><strong>API文档与测试</strong></p><ul><li>Swagger3自动生成接口文档</li><li>使用Postman进行接口测试</li></ul></li></ol><h4 id="实战任务-1" tabindex="-1"><strong>实战任务</strong> <a class="header-anchor" href="#实战任务-1" aria-label="Permalink to &quot;**实战任务**&quot;">​</a></h4><ul><li>为系统添加教师角色权限控制</li><li>实现成绩变更时通过邮件/短信通知（异步消息队列）</li></ul><hr><h3 id="第三阶段-项目升级与部署-2周" tabindex="-1"><strong>第三阶段：项目升级与部署（2周）</strong> <a class="header-anchor" href="#第三阶段-项目升级与部署-2周" aria-label="Permalink to &quot;**第三阶段：项目升级与部署（2周）**&quot;">​</a></h3><h4 id="重点内容-2" tabindex="-1"><strong>重点内容</strong> <a class="header-anchor" href="#重点内容-2" aria-label="Permalink to &quot;**重点内容**&quot;">​</a></h4><ol><li><p><strong>前端整合</strong></p><ul><li>使用Vue3 + Element Plus构建管理界面</li><li>Axios调用后端API</li></ul></li><li><p><strong>容器化部署</strong></p><ul><li>Docker打包Spring Boot应用（多阶段构建）</li><li>Docker Compose编排MySQL/Redis服务</li></ul></li><li><p><strong>监控与优化</strong></p><ul><li>Spring Boot Actuator暴露健康检查端点</li><li>Prometheus + Grafana监控系统性能</li></ul></li></ol><h4 id="实战任务-2" tabindex="-1"><strong>实战任务</strong> <a class="header-anchor" href="#实战任务-2" aria-label="Permalink to &quot;**实战任务**&quot;">​</a></h4><ul><li>将原有控制台系统升级为Web版（<a href="https://example.com" target="_blank" rel="noreferrer">示例效果</a>）</li><li>部署到云服务器（阿里云/腾讯云）并配置HTTPS</li></ul><hr><h2 id="学习资源推荐" tabindex="-1"><strong>学习资源推荐</strong> <a class="header-anchor" href="#学习资源推荐" aria-label="Permalink to &quot;**学习资源推荐**&quot;">​</a></h2><table tabindex="0"><thead><tr><th>类型</th><th>推荐内容</th></tr></thead><tbody><tr><td><strong>官方文档</strong></td><td><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noreferrer">Spring Boot官方文档</a></td></tr><tr><td><strong>书籍</strong></td><td>《Spring实战（第6版）》《Spring Boot编程思想》</td></tr><tr><td><strong>视频</strong></td><td>B站<a href="https://www.bilibili.com/video/BV19K4y1L7MT" target="_blank" rel="noreferrer">雷丰阳SpringBoot2核心原理</a></td></tr><tr><td><strong>项目</strong></td><td><a href="https://github.com/macrozheng/mall-learning" target="_blank" rel="noreferrer">mall-learning</a>（电商系统）</td></tr></tbody></table><hr><h2 id="关键代码示例" tabindex="-1"><strong>关键代码示例</strong> <a class="header-anchor" href="#关键代码示例" aria-label="Permalink to &quot;**关键代码示例**&quot;">​</a></h2><h3 id="_1-spring-data-jpa接口定义" tabindex="-1"><strong>1. Spring Data JPA接口定义</strong> <a class="header-anchor" href="#_1-spring-data-jpa接口定义" aria-label="Permalink to &quot;**1. Spring Data JPA接口定义**&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ScoreRepository</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JpaRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 根据学号查询成绩</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByStudentId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">studentId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 自定义JPQL查询</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SELECT s FROM Score s WHERE s.totalScore &gt; :minScore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findHighScores</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minScore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> minScore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,33)]))}const c=i(r,[["render",l]]);export{k as __pageData,c as default};
